# --------------- #
# Display Options #
# --------------- #

# Use UTF-8

#set-window-option -g utf8 on
# Make tmux display things in 256 colors
set -g default-terminal "screen-256color"

# scroll limit
set -g history-limit 100000

# clear history
bind -n C-k clear-history

# status bar
set -g status on
set -g status-interval 2
bind-key -n C-B set -g status

source-file ~/.tmux/ag1.powerline.tmuxtheme

# ------------ #
# Interactions #
# ------------ #

# Remap prefix to C-x
unbind C-b
set -g prefix C-x
bind C-x send-prefix

# send C-x-x sends C-x to the shell
bind-key x send-prefix

# mouse scrolling and selection
#set -g mouse on

# faster response
set-option -sg escape-time 0

# swiching to last window like screen
bind-key C-z last-window

# xterm keys!
set-window-option -g xterm-keys on

# ----------------- #
# Window Management #
# ----------------- #

# sane splitting
bind e split-window -h -c '#{pane_current_path}'
bind o split-window -v -c '#{pane_current_path}'
#bind -n C-E split-window -h
#bind -n C-O split-window -v

# nova janela com Ctrl-t/C-x-t
bind t new-window -c '#{pane_current_path}'
bind -n C-S-T new-window
# matar janela com Ctrl-w/C-x-w
bind w kill-window
#bind -n C-W kill-window

# matar o servidor com C-x-k
bind k kill-server

# switch between windows Ctrl-[pagedown|left|pageup|right]
bind -n C-PageDown next-window
bind -n C-S-Right next-window
bind -n C-PageUp previous-window
bind -n C-S-Left previous-window

# move windows Ctrl-shift-[left|right]
bind-key -n C-S-Down swap-window -t -1
bind-key -n C-S-Up swap-window -t +1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-Left if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-Down if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-Up if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n M-Right if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-Left select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-Down select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-Up select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-Right select-pane -R
bind-key -T copy-mode-vi M-\ select-pane -l

# -------------- #
# Vi Integration #
# -------------- #

# Use vi keys in copy mode
set-option -g status-keys vi
setw -g mode-keys vi

# <prefix>+esc enters copy mode
unbind [
bind Escape copy-mode

# 'p' to paste
unbind p
bind p paste-buffer

# toggle rectangle selection
bind-key -T copy-mode-vi 'v' send -X begin-selection # Begin selection in copy mode.
bind-key -T copy-mode-vi 'V' send -X rectangle-toggle # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-selection # Yank selection in copy mode.
# unbind-key -t vi-copy v
unbind-key -T copy-mode-vi v

# Move whole words in copy mode
bind-key -T copy-mode-vi "C-Left" send-key b
bind-key -T copy-mode-vi "C-Right" send-key w

# --------- #
# Utilities #
# --------- #

# Set current pane to full screen
bind -n M-z resize-pane -Z

# Reload config without killing server
bind r source-file ~/.tmux.conf \; display-message "  Config reloaded..."

# Quickly edit .vimrc
bind-key -n F7 split-window -h "vim ~/.vimrc"

# ------- #
# Plugins #
# ------- #

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sidebar'
#set -g @plugin 'jimeh/tmux-themepack'
#set -g @themepack 'powerline/default/cyan'
set -g @plugin 'tmux-plugins/tmux-yank'
#tmux-yank options
set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
#tmux-continuum options
set -g @continuum-save-interval '30'
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
